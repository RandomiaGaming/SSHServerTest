# This is the CMakeCache file.
# For build in directory: d:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/x64-windows-dbg
# It was generated by CMake: C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a file.
ARGP_INCLUDE_DIR:PATH=ARGP_INCLUDE_DIR-NOTFOUND

//Path to a library.
ARGP_LIBRARY:FILEPATH=ARGP_LIBRARY-NOTFOUND

//Path to a file.
ARGP_ROOT_DIR:PATH=ARGP_ROOT_DIR-NOTFOUND

//Build shared libraries
BUILD_SHARED_LIBS:BOOL=ON

//Build with client tests; requires openssh
CLIENT_TESTING:BOOL=OFF

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.42.34433/bin/Hostx64/x64/lib.exe

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Debug

CMAKE_CROSSCOMPILING:STRING=OFF

CMAKE_CXX_FLAGS:STRING=' /nologo /DWIN32 /D_WINDOWS /utf-8 /GR /EHsc /MP '

CMAKE_CXX_FLAGS_DEBUG:STRING='/D_DEBUG /MDd /Z7 /Ob0 /Od /RTC1 '

CMAKE_CXX_FLAGS_RELEASE:STRING='/MD /O2 /Oi /Gy /DNDEBUG /Z7 '

//C compiler
CMAKE_C_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.42.34433/bin/Hostx64/x64/cl.exe

CMAKE_C_FLAGS:STRING=' /nologo /DWIN32 /D_WINDOWS /utf-8 /MP '

CMAKE_C_FLAGS_DEBUG:STRING='/D_DEBUG /MDd /Z7 /Ob0 /Od /RTC1 '

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

CMAKE_C_FLAGS_RELEASE:STRING='/MD /O2 /Oi /Gy /DNDEBUG /Z7 '

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//No help, variable specified on the command line.
CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION:UNINITIALIZED=ON

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/nologo    /debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING='/nologo /DEBUG /INCREMENTAL:NO /OPT:REF /OPT:ICF  '

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//No help, variable specified on the command line.
CMAKE_EXPORT_NO_PACKAGE_REGISTRY:UNINITIALIZED=ON

//No help, variable specified on the command line.
CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY:UNINITIALIZED=ON

//No help, variable specified on the command line.
CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY:UNINITIALIZED=ON

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/x64-windows-dbg/CMakeFiles/pkgRedirects

//No help, variable specified on the command line.
CMAKE_INSTALL_BINDIR:STRING=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//No help, variable specified on the command line.
CMAKE_INSTALL_LIBDIR:STRING=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/pkgs/libssh_x64-windows/debug

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//No help, variable specified on the command line.
CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_SKIP:UNINITIALIZED=TRUE

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.42.34433/bin/Hostx64/x64/link.exe

//make program
CMAKE_MAKE_PROGRAM:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/nologo    /debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING='/nologo /DEBUG /INCREMENTAL:NO /OPT:REF /OPT:ICF  '

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

CMAKE_MSVC_RUNTIME_LIBRARY:STRING=MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=libssh

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=0.10.6

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=10

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=6

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/rc.exe

CMAKE_RC_FLAGS:STRING=-c65001 /DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_REQUIRE_FIND_PACKAGE_OpenSSL:UNINITIALIZED=ON

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/nologo    /debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING='/nologo /DEBUG /INCREMENTAL:NO /OPT:REF /OPT:ICF  '

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=/nologo

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=/nologo

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

CMAKE_SYSTEM_NAME:STRING=Windows

CMAKE_SYSTEM_PROCESSOR:STRING=AMD64

CMAKE_SYSTEM_VERSION:STRING=10.0.19045

//The CMake toolchain file
CMAKE_TOOLCHAIN_FILE:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/vcpkg/scripts/buildsystems/vcpkg.cmake

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=ON

//Dot tool for use with Doxygen
DOXYGEN_DOT_EXECUTABLE:FILEPATH=DOXYGEN_DOT_EXECUTABLE-NOTFOUND

//Doxygen documentation generation tool (https://www.doxygen.nl)
DOXYGEN_EXECUTABLE:FILEPATH=DOXYGEN_EXECUTABLE-NOTFOUND

//No help, variable specified on the command line.
FETCHCONTENT_FULLY_DISCONNECTED:UNINITIALIZED=ON

//Build with fuzzer for the server and client (automatically enables
// none cipher!)
FUZZ_TESTING:BOOL=OFF

//Path to a library.
LIB_EAY_DEBUG:FILEPATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/debug/lib/libcrypto.lib

//Path to a library.
LIB_EAY_RELEASE:FILEPATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/lib/libcrypto.lib

//Path to a program.
NSIS_MAKE:FILEPATH=NSIS_MAKE-NOTFOUND

//Path to a file.
NSIS_ROOT_PATH:PATH=NSIS_ROOT_PATH-NOTFOUND

//Path to a file.
OPENSSL_APPLINK_SOURCE:FILEPATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/include/openssl/applink.c

//Path to a file.
OPENSSL_INCLUDE_DIR:PATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/include

//Build with picky developer flags
PICKY_DEVELOPER:BOOL=OFF

//Build with server tests; requires openssh and dropbear
SERVER_TESTING:BOOL=OFF

//Path to a library.
SSL_EAY_DEBUG:FILEPATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/debug/lib/libssl.lib

//Path to a library.
SSL_EAY_RELEASE:FILEPATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/lib/libssl.lib

//Build with unit tests
UNIT_TESTING:BOOL=OFF

//Automatically copy dependencies into the output directory for
// executables.
VCPKG_APPLOCAL_DEPS:BOOL=OFF

//No help, variable specified on the command line.
VCPKG_CHAINLOAD_TOOLCHAIN_FILE:UNINITIALIZED=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/vcpkg/scripts/toolchains/windows.cmake

//No help, variable specified on the command line.
VCPKG_CRT_LINKAGE:UNINITIALIZED=dynamic

//No help, variable specified on the command line.
VCPKG_CXX_FLAGS:UNINITIALIZED=

//No help, variable specified on the command line.
VCPKG_CXX_FLAGS_DEBUG:UNINITIALIZED=

//No help, variable specified on the command line.
VCPKG_CXX_FLAGS_RELEASE:UNINITIALIZED=

//No help, variable specified on the command line.
VCPKG_C_FLAGS:UNINITIALIZED=

//No help, variable specified on the command line.
VCPKG_C_FLAGS_DEBUG:UNINITIALIZED=

//No help, variable specified on the command line.
VCPKG_C_FLAGS_RELEASE:UNINITIALIZED=

//The directory which contains the installed libraries for each
// triplet
VCPKG_INSTALLED_DIR:PATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed

//No help, variable specified on the command line.
VCPKG_LINKER_FLAGS:UNINITIALIZED=

//No help, variable specified on the command line.
VCPKG_LINKER_FLAGS_DEBUG:UNINITIALIZED=

//No help, variable specified on the command line.
VCPKG_LINKER_FLAGS_RELEASE:UNINITIALIZED=

//The path to the vcpkg manifest directory.
VCPKG_MANIFEST_DIR:PATH=

//Use manifest mode, as opposed to classic mode.
VCPKG_MANIFEST_MODE:BOOL=OFF

//No help, variable specified on the command line.
VCPKG_PLATFORM_TOOLSET:UNINITIALIZED=v143

//Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH
// and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are
// found after toolchain/system libraries/packages.
VCPKG_PREFER_SYSTEM_LIBS:BOOL=OFF

//Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths
VCPKG_SETUP_CMAKE_PROGRAM_PATH:BOOL=ON

//No help, variable specified on the command line.
VCPKG_SET_CHARSET_FLAG:UNINITIALIZED=ON

//No help, variable specified on the command line.
VCPKG_TARGET_ARCHITECTURE:UNINITIALIZED=x64

//Vcpkg target triplet (ex. x86-windows)
VCPKG_TARGET_TRIPLET:STRING=x64-windows

//Trace calls to find_package()
VCPKG_TRACE_FIND_PACKAGE:BOOL=OFF

//Enables messages from the VCPKG toolchain for debugging purposes.
VCPKG_VERBOSE:BOOL=OFF

//Allow ABI break
WITH_ABI_BREAK:BOOL=OFF

//Build benchmarks tools; enables unit testing and client tests
WITH_BENCHMARKS:BOOL=OFF

//Compile with blowfish support
WITH_BLOWFISH_CIPHER:BOOL=OFF

//Build with calltrace debug output
WITH_DEBUG_CALLTRACE:BOOL=ON

//Build with crypto debug output
WITH_DEBUG_CRYPTO:BOOL=OFF

//Build with packet debug output
WITH_DEBUG_PACKET:BOOL=OFF

//Build with DSA
WITH_DSA:BOOL=OFF

//Build examples
WITH_EXAMPLES:BOOL=OFF

//Compile against libgcrypt
WITH_GCRYPT:BOOL=OFF

//Enable DH Group exchange mechanisms
WITH_GEX:BOOL=ON

//Build with GSSAPI support
WITH_GSSAPI:BOOL=OFF

//Enable insecure none cipher and MAC algorithms (not suitable
// for production!)
WITH_INSECURE_NONE:BOOL=OFF

//Compile doxygen internal documentation
WITH_INTERNAL_DOC:BOOL=OFF

//Compile against libmbedtls
WITH_MBEDTLS:BOOL=OFF

//Build with libnacl (curve25519)
WITH_NACL:BOOL=OFF

//Compile with Pcap generation support
WITH_PCAP:BOOL=ON

//Build with PKCS#11 URI support
WITH_PKCS11_URI:BOOL=OFF

//Build with SSH server support
WITH_SERVER:BOOL=ON

//Build with SFTP support
WITH_SFTP:BOOL=ON

//Build with symbol versioning
WITH_SYMBOL_VERSIONING:BOOL=OFF

//Build with ZLIB support
WITH_ZLIB:BOOL=OFF

//(experimental) Automatically copy dependencies into the install
// target directory for executables. Requires CMake 3.14.
X_VCPKG_APPLOCAL_DEPS_INSTALL:BOOL=OFF

//(experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force
// serialization.
X_VCPKG_APPLOCAL_DEPS_SERIALIZED:BOOL=OFF

//The directory which contains the installed libraries for each
// triplet
_VCPKG_INSTALLED_DIR:PATH=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed

//No help, variable specified on the command line.
_VCPKG_ROOT_DIR:UNINITIALIZED=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/vcpkg

//Value Computed by CMake
libssh-headers-x_BINARY_DIR:STATIC=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/x64-windows-dbg/include

//Value Computed by CMake
libssh-headers-x_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
libssh-headers-x_SOURCE_DIR:STATIC=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/src/libssh-0-5594e2099c.clean/include

//Value Computed by CMake
libssh-headers_BINARY_DIR:STATIC=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/x64-windows-dbg/include/libssh

//Value Computed by CMake
libssh-headers_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
libssh-headers_SOURCE_DIR:STATIC=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/src/libssh-0-5594e2099c.clean/include/libssh

//Value Computed by CMake
libssh_BINARY_DIR:STATIC=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/x64-windows-dbg

//Value Computed by CMake
libssh_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
libssh_SOURCE_DIR:STATIC=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/src/libssh-0-5594e2099c.clean

//Dependencies for the target
ssh_LIB_DEPENDS:STATIC=optimized;D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/lib/libcrypto.lib;debug;D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/debug/lib/libcrypto.lib;general;iphlpapi;general;ws2_32;


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: ARGP_INCLUDE_DIR
ARGP_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ARGP_ROOT_DIR
ARGP_ROOT_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/x64-windows-dbg
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=29
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=5
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/blds/libssh/src/libssh-0-5594e2099c.clean
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=5
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.29
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TOOLCHAIN_FILE
CMAKE_TOOLCHAIN_FILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Default C Compiler Flags
DEFAULT_C_COMPILE_FLAGS:INTERNAL=/D _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;/D _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT=1;/D _CRT_NONSTDC_NO_WARNINGS=1;/D _CRT_SECURE_NO_WARNINGS=1
//Default C Linker Flags
DEFAULT_LINK_FLAGS:INTERNAL=
//ADVANCED property for variable: DOXYGEN_DOT_EXECUTABLE
DOXYGEN_DOT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DOXYGEN_EXECUTABLE
DOXYGEN_EXECUTABLE-ADVANCED:INTERNAL=1
//Details about finding OpenSSL
FIND_PACKAGE_MESSAGE_DETAILS_OpenSSL:INTERNAL=[optimized;D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/lib/libcrypto.lib;debug;D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/debug/lib/libcrypto.lib][D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/x64-windows/include][c ][v3.4.0(1.0.1)]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Have symbol EVP_PKEY_ED25519
FOUND_OPENSSL_ED25519:INTERNAL=1
//Have include argp.h
HAVE_ARGP_H:INTERNAL=
//Have include arpa/inet.h
HAVE_ARPA_INET_H:INTERNAL=
//Have include byteswap.h
HAVE_BYTESWAP_H:INTERNAL=
//Test HAVE_COMPILER__FUNCTION__
HAVE_COMPILER__FUNCTION__:INTERNAL=1
//Test HAVE_COMPILER__FUNC__
HAVE_COMPILER__FUNC__:INTERNAL=1
//Test HAVE_CONSTRUCTOR_ATTRIBUTE
HAVE_CONSTRUCTOR_ATTRIBUTE:INTERNAL=
//Test HAVE_DESTRUCTOR_ATTRIBUTE
HAVE_DESTRUCTOR_ATTRIBUTE:INTERNAL=
//Have function explicit_bzero
HAVE_EXPLICIT_BZERO:INTERNAL=
//Test HAVE_FALLTHROUGH_ATTRIBUTE
HAVE_FALLTHROUGH_ATTRIBUTE:INTERNAL=
//Test HAVE_GCC_THREAD_LOCAL_STORAGE
HAVE_GCC_THREAD_LOCAL_STORAGE:INTERNAL=
//Test HAVE_GCC_VOLATILE_MEMORY_PROTECTION
HAVE_GCC_VOLATILE_MEMORY_PROTECTION:INTERNAL=
//Have symbol getaddrinfo
HAVE_GETADDRINFO:INTERNAL=1
//Have include glob.h
HAVE_GLOB_H:INTERNAL=
//Have symbol htonll
HAVE_HTONLL:INTERNAL=1
//Have include io.h
HAVE_IO_H:INTERNAL=1
//Have function isblank
HAVE_ISBLANK:INTERNAL=1
//Test HAVE_LD_VERSION_SCRIPT
HAVE_LD_VERSION_SCRIPT:INTERNAL=
//Have include libutil.h
HAVE_LIBUTIL_H:INTERNAL=
//Have function memset_s
HAVE_MEMSET_S:INTERNAL=
//Test HAVE_MSC_THREAD_LOCAL_STORAGE
HAVE_MSC_THREAD_LOCAL_STORAGE:INTERNAL=1
//Have symbol ntohll
HAVE_NTOHLL:INTERNAL=1
//Have include openssl/aes.h
HAVE_OPENSSL_AES_H:INTERNAL=1
//Have include openssl/des.h
HAVE_OPENSSL_DES_H:INTERNAL=1
//Have include openssl/ecdh.h
HAVE_OPENSSL_ECDH_H:INTERNAL=1
//Have include openssl/ecdsa.h
HAVE_OPENSSL_ECDSA_H:INTERNAL=1
//Have include openssl/ec.h
HAVE_OPENSSL_EC_H:INTERNAL=1
//Have function EVP_chacha20
HAVE_OPENSSL_EVP_CHACHA20:INTERNAL=1
//Have function EVP_DigestSign
HAVE_OPENSSL_EVP_DIGESTSIGN:INTERNAL=1
//Have function EVP_DigestVerify
HAVE_OPENSSL_EVP_DIGESTVERIFY:INTERNAL=1
//Have function EVP_KDF_CTX_new
HAVE_OPENSSL_EVP_KDF_CTX_NEW:INTERNAL=1
//Have function EVP_KDF_CTX_new_id
HAVE_OPENSSL_EVP_KDF_CTX_NEW_ID:INTERNAL=
//Have symbol EVP_PKEY_POLY1305
HAVE_OPENSSL_EVP_POLY1305:INTERNAL=1
//Have function FIPS_mode
HAVE_OPENSSL_FIPS_MODE:INTERNAL=
//Have function OPENSSL_ia32cap_loc
HAVE_OPENSSL_IA32CAP_LOC:INTERNAL=
//Have function RAND_priv_bytes
HAVE_OPENSSL_RAND_PRIV_BYTES:INTERNAL=1
//Have symbol EVP_PKEY_X25519
HAVE_OPENSSL_X25519:INTERNAL=1
//Have include pty.h
HAVE_PTY_H:INTERNAL=
//Have symbol SecureZeroMemory
HAVE_SECURE_ZERO_MEMORY:INTERNAL=1
//Have symbol select
HAVE_SELECT:INTERNAL=1
//Have symbol snprintf
HAVE_SNPRINTF:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have function strncpy
HAVE_STRNCPY:INTERNAL=1
//Have function strndup
HAVE_STRNDUP:INTERNAL=
//Have function strtoull
HAVE_STRTOULL:INTERNAL=1
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/utime.h
HAVE_SYS_UTIME_H:INTERNAL=1
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=
//Have include util.h
HAVE_UTIL_H:INTERNAL=
//Have include utmp.h
HAVE_UTMP_H:INTERNAL=
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=
//Have symbol vsnprintf
HAVE_VSNPRINTF:INTERNAL=1
//Test HAVE_WEAK_ATTRIBUTE
HAVE_WEAK_ATTRIBUTE:INTERNAL=
//Have include winsock2.h;ws2tcpip.h
HAVE_WS2TCPIP_H:INTERNAL=1
//Have include winsock2.h;ws2tcpip.h;wspiapi.h
HAVE_WSPIAPI_H:INTERNAL=1
//Have symbol _snprintf
HAVE__SNPRINTF:INTERNAL=1
//Have symbol _snprintf_s
HAVE__SNPRINTF_S:INTERNAL=1
//Have function _strtoui64
HAVE__STRTOUI64:INTERNAL=1
//Have symbol _vsnprintf
HAVE__VSNPRINTF:INTERNAL=1
//Have symbol _vsnprintf_s
HAVE__VSNPRINTF_S:INTERNAL=1
//libssh required system libraries
LIBSSH_REQUIRED_LIBRARIES:INTERNAL=
//ADVANCED property for variable: NSIS_MAKE
NSIS_MAKE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: NSIS_ROOT_PATH
NSIS_ROOT_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_INCLUDE_DIR
OPENSSL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Install the dependencies listed in your manifest:
//\n    If this is off, you will have to manually install your dependencies.
//\n    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md
// for more info.
//\n
VCPKG_MANIFEST_INSTALL:INTERNAL=OFF
//ADVANCED property for variable: VCPKG_VERBOSE
VCPKG_VERBOSE-ADVANCED:INTERNAL=1
//Test WITH_/D__CRT_NONSTDC_NO_WARNINGS_1_FLAG
WITH_/D__CRT_NONSTDC_NO_WARNINGS_1_FLAG:INTERNAL=1
//Test WITH_/D__CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_1_FLAG
WITH_/D__CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_1_FLAG:INTERNAL=1
//Test WITH_/D__CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT_1_FLAG
WITH_/D__CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT_1_FLAG:INTERNAL=1
//Test WITH_/D__CRT_SECURE_NO_WARNINGS_1_FLAG
WITH_/D__CRT_SECURE_NO_WARNINGS_1_FLAG:INTERNAL=1
//Making sure VCPKG_MANIFEST_MODE doesn't change
Z_VCPKG_CHECK_MANIFEST_MODE:INTERNAL=OFF
//Vcpkg root directory
Z_VCPKG_ROOT_DIR:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/vcpkg
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=D:/ImportantData/Coding/EpsilonTheatrics/SSHServerTest/vcpkg_installed/vcpkg/pkgs/libssh_x64-windows/debug

